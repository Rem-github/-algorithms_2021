"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

user_db = {
    'Вася' : ['pass1', True],
    'Петя' : ['pass2', True],
    'Коля' : ['pass3', False]
}

# в первом варианте сложность линейная

def check(user_db,name,pas):
    check_result = ''                                           # O(1)
    for key, value in user_db.items():                          # O(n)
        if key == name:                                         # O(1)
            if value[1] == True:                                # O(1)
                if value[0] == pas:                             # O(1)
                    check_result = 'Авторизация успешна'        # O(1)
                else:
                    check_result = 'Не верный пароль'           # O(1)
            else:
                check_result = 'Необходимо пройти активацию'    # O(1)
            break
        else:
            check_result = 'Пользователь не зарегистрирован'    # O(1)
    return check_result                                         # O(1)

# в этом варианте сложность константа, хотя для меня загадка, каким образом работает функция get,
# что она считается константой. Но этот вариант, в таком случае, гораздо лучше.

def check1(user_db,name,pas):
    check_result = ''                                           # O(1)
    if user_db.get(name):                                       # O(1)
        data = user_db.get(name)                                # O(1)
        if data[1] == True:                                     # O(1)
            if data[0] == pas:                                  # O(1)
                check_result = 'Авторизация успешна'            # O(1)
            else:
                check_result = 'Не верный пароль'               # O(1)
        else:
            check_result = 'Необходимо пройти активацию'        # O(1)
    else:
        check_result = 'Пользователь не зарегистрирован'        # O(1)
    return check_result                                         # O(1)



print(check1(user_db,'Петя','pass2'))
print(check1(user_db,'Маша','pass2'))
print(check1(user_db,'Коля','pass3'))