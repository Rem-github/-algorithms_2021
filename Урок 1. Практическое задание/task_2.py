"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

ф-ции min() и sort() не исп-ем!
"""

# Сложность такого алгоритма: O(n^2) - квадратичная.
def min_number(user_list):
    n = 0                                   # O(1)
    min = user_list[0]                      # O(1)
    for k in range(len(user_list)):         # O(n)
        for j in range(len(user_list)):     # O(n)
            if user_list[k] < user_list[j]: # O(1)
                n = user_list[k]            # O(1)
        if min > n:                         # O(1)
            min = n                         # O(1)
    return min                              # O(1)

# Сложность такого алгоритма: O(n) - линейная.
def min_number_line(user_list):
    min = user_list[0]                      # O(1)
    for k in user_list:                     # O(n)
        if k < min:                         # O(1)
            min = k                         # O(1)
    return min                              # O(1)

print(min_number([-3,1,2,3,4,88,5,6,7,0,8]))
print(min_number_line([1,2,3,4,88,5,6,7,0,8,-5]))

